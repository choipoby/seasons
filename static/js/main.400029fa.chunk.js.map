{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","console","log","className","Spinner","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"sMAGMA,G,MAAe,CACnBC,OAAQ,CACNC,KAAM,sBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,kBACNC,SAAU,eAyBCE,EAbO,SAAAC,GACpB,IATiBC,EAAKC,EAShBC,GATWF,EASQD,EAAMC,KATTC,GASc,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAID,EAEJP,EAAaS,GAA/BP,EAFsB,EAEtBA,KAAMC,EAFgB,EAEhBA,SAEb,OADAS,QAAQC,IAAIJ,GAEV,yBAAKK,UAAS,yBAAoBL,IAChC,uBAAGK,UAAS,4BAAuBX,EAAvB,WACZ,4BAAKD,GACL,uBAAGY,UAAS,0BAAqBX,EAArB,aC5BZY,EAAU,SAACT,GACf,OACE,yBAAKQ,UAAU,oBACb,yBAAKA,UAAU,sBAAf,IAAsCR,EAAMJ,QAKlDa,EAAQC,aAAe,CAAEd,KAAM,cAEhBa,QCPTE,E,2MAEJC,MAAQ,CAAEX,IAAK,KAAMY,aAAc,I,mFAEd,IAAD,OAClBP,QAAQC,IAAI,qBACZO,OAAOC,UAAUC,YAAYC,oBAC3B,SAAAC,GACEZ,QAAQC,IAAI,qBAEZ,EAAKY,SAAS,CAAElB,IAAKiB,EAASE,OAAOC,cAMvC,SAAAC,GACEhB,QAAQC,IAAI,kBACZ,EAAKY,SAAS,CAAEN,aAAcS,EAAIC,e,2CAMtCjB,QAAQC,IAAI,wB,6CAIZD,QAAQC,IAAI,0B,sCAIZ,OAAIiB,KAAKZ,MAAMC,eAAiBW,KAAKZ,MAAMX,IAClC,wCAAcuB,KAAKZ,MAAMC,aAAzB,MAGJW,KAAKZ,MAAMC,cAAgBW,KAAKZ,MAAMX,IAClC,kBAAC,EAAD,CAAeA,IAAKuB,KAAKZ,MAAMX,MAGjC,kBAAC,EAAD,CAASL,KAAK,wB,+BAKrB,OAAO,yBAAKY,UAAU,cAAcgB,KAAKC,qB,GA7C3BC,IAAMC,WAiDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.400029fa.chunk.js","sourcesContent":["import './SeasonDisplay.css'\nimport React from \"react\";\n\nconst seasonConfig = {\n  summer: {\n    text: \"Let's hit the beach\",\n    iconName: \"sun\"\n  },\n  winter: {\n    text: \"Let's go skiing\",\n    iconName: \"snowflake\"\n  }\n};\n\nconst getSeason = (lat, month) => {\n  if (month > 2 && month < 9) {\n    return lat > 0 ? \"summer\" : \"winter\";\n  } else {\n    return lat < 0 ? \"summer\" : \"winter\";\n  }\n};\n\nconst SeasonDisplay = props => {\n  const season = getSeason(props.lat, new Date().getMonth());\n  const {text, iconName} = seasonConfig[season];\n  console.log(season);\n  return (\n    <div className={`season-display ${season}`}>\n      <i className={`icon-left massive ${iconName} icon`} />\n      <h1>{text}</h1>\n      <i className={`icon-right huge ${iconName} icon`} />\n    </div>\n  );\n};\n\nexport default SeasonDisplay;\n","import React from \"react\";\n\nconst Spinner = (props) => {\n  return (\n    <div className=\"ui active dimmer\">\n      <div className=\"ui big text loader\"> {props.text}</div>\n    </div>\n  );\n};\n\nSpinner.defaultProps = { text: \"Loading...\"};\n\nexport default Spinner;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Spinner from \"./Spinner\";\n\nclass App extends React.Component {\n  // babel will create a constructor from this\n  state = { lat: null, errorMessage: \"\" };\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        console.log(\"position acquired\");\n        // we called setState!!!\n        this.setState({ lat: position.coords.latitude });\n\n        // we should never never nver do like\n        // this.state.lat = posotion.coords.latitude\n        // one single exception is the first initialization\n      },\n      err => {\n        console.log(\"error happened\");\n        this.setState({ errorMessage: err.message });\n      }\n    );\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n  }\n\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div> Error: {this.state.errorMessage} </div>;\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return <SeasonDisplay lat={this.state.lat} />;\n    }\n\n    return <Spinner text=\"checking location\" />;\n  }\n\n  // React says we have to define render()\n  render() {\n    return <div className=\"border red\">{this.renderContent()}</div>;\n  }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}